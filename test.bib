@article{gong_set_reconcilation_2020,
	title = {Space- and computationally-efficient set reconciliation via parity bitmap sketch ({PBS})},
	volume = {14},
	issn = {2150-8097},
	url = {https://dl.acm.org/doi/10.14778/3436905.3436906},
	doi = {10.14778/3436905.3436906},
	abstract = {Set reconciliation is a fundamental algorithmic problem that arises in many networking, system, and database applications. In this problem, two large sets A and B of objects (bitcoins, files, records, etc.) are stored respectively at two different network-connected hosts, which we name Alice and Bob respectively. Alice and Bob communicate with each other to learn AΔB, the difference between A and B, and as a result the reconciled set A∪B.Current set reconciliation schemes are based on either invertible Bloom filters (IBF) or error-correction codes (ECC). The former has a low computational complexity of O(d), where d is the cardinality of AΔB, but has a high communication overhead that is several times larger than the theoretical minimum. The latter has a low communication overhead close to the theoretical minimum, but has a much higher computational complexity of O(d2). In this work, we propose Parity Bitmap Sketch (PBS), an ECC-based set reconciliation scheme that gets the better of both worlds: PBS has both a low computational complexity of O(d) just like IBF-based solutions and a low communication overhead of roughly twice the theoretical minimum. A separate contribution of this work is a novel rigorous analytical framework that can be used for the precise calculation of various performance metrics and for the near-optimal parameter tuning of PBS.},
	language = {en},
	number = {4},
	urldate = {2021-03-03},
	journal = {Proceedings of the VLDB Endowment},
	author = {Gong, Long and Liu, Ziheng and Liu, Liang and Xu, Jun and Ogihara, Mitsunori and Yang, Tong},
	month = dec,
	year = {2020},
	pages = {458--470},
	file = {Gong et al. - 2020 - Space- and computationally-efficient set reconcili.pdf}
}

@article{meng_sliding-window_nodate,
	title = {Sliding-{Window} {QPS} ({SW}-{QPS}): {A} {Perfect} {Parallel} {Iterative} {Switching} {Algorithm} for {Input}-{Queued} {Switches}},
	abstract = {In this work, we ﬁrst propose a parallel batch switching algorithm called Small-Batch Queue-Proportional Sampling (SB-QPS). Compared to other batch switching algorithms, SB-QPS signiﬁcantly reduces the batch size without sacriﬁcing the throughput performance and hence has much lower delay when traﬃc load is light to moderate. It also achieves the lowest possible time complexity of O(1) per matching computation per port, via parallelization. We then propose another algorithm called Sliding-Window QPS (SW-QPS). SW-QPS retains and enhances all beneﬁts of SB-QPS, and reduces the batching delay to zero via a novel switching framework called sliding-window switching. In addition, SW-QPS computes matchings of much higher qualities, as measured by the resulting throughput and delay performances, than QPS-1, the state-of-the-art regular switching algorithm that builds upon the same underlying bipartite matching algorithm.},
	year = {2020},
	language = {en},
	author = {Meng, Jingfan and Gong, Long},
	pages = {6},
	file = {Meng and Gong - Sliding-Window QPS (SW-QPS) A Perfect Parallel It.pdf}
}

@article{gong_idec_2020,
	title = {{iDEC}: indexable distance estimating codes for approximate nearest neighbor search},
	volume = {13},
	issn = {2150-8097},
	shorttitle = {{iDEC}},
	url = {https://dl.acm.org/doi/10.14778/3397230.3397243},
	doi = {10.14778/3397230.3397243},
	abstract = {Approximate Nearest Neighbor (ANN) search is a fundamental algorithmic problem, with numerous applications in many areas of computer science. In this work, we propose indexable distance estimating codes (iDEC), a new solution framework to ANN that extends and improves the locality sensitive hashing (LSH) framework in a fundamental and systematic way. Empirically, an iDEC-based solution has a low index space complexity of O(n) and can achieve a low average query time complexity of approximately O(log n). We show that our iDEC-based solutions for ANN in Hamming and edit distances outperform the respective state-of-theart LSH-based solutions for both in-memory and externalmemory processing. We also show that our iDEC-based in-memory ANN-H solution is more scalable than all existing solutions. We also discover deep connections between Error-Estimating Codes (EEC), LSH, and iDEC.},
	language = {en},
	number = {9},
	urldate = {2021-01-29},
	journal = {Proceedings of the VLDB Endowment},
	author = {Gong, Long and Wang, Huayi and Ogihara, Mitsunori and Xu, Jun},
	month = may,
	year = {2020},
	pages = {1483--1497},
	file = {Gong et al. - 2020 - iDEC indexable distance estimating codes for appr.pdf}
}

@inproceedings{gong_serenade_2020,
	address = {Newark, NJ, USA},
	title = {{SERENADE}: {A} {Parallel} {Iterative} {Algorithm} for {Crossbar} {Scheduling} in {Input}-{Queued} {Switches}},
	isbn = {978-1-72814-846-5},
	shorttitle = {{SERENADE}},
	url = {https://ieeexplore.ieee.org/document/9098995/},
	doi = {10.1109/HPSR48589.2020.9098995},
	abstract = {Most of today’s high-speed switches and routers adopt an input-queued crossbar switch architecture. Such a switch needs to compute a matching (crossbar schedule) between the input ports and output ports during each switching cycle (time slot). A key research challenge in designing large (in number of input/output ports N ) input-queued crossbar switches is to develop crossbar scheduling algorithms that can compute “high quality” matchings – i.e., those that result in high switch throughput (ideally 100\%) and low queueing delays for packets –at line rates. SERENA is one such algorithm: it outputs excellent matching decisions that result in 100\% switch throughput and reasonably good queueing delays. However, since SERENA is a centralized algorithm with O(N ) time complexity, it cannot support switches that both are large and have a very high line rate per port. In this work, we propose SERENADE (SERENA, the Distributed Edition), a parallel iterative algorithm that provably precisely emulates SERENA in only O(log N ) iterations between input ports and output ports, and hence has a time complexity of only O(log N ) per port.},
	language = {en},
	urldate = {2021-01-29},
	booktitle = {2020 {IEEE} 21st {International} {Conference} on {High} {Performance} {Switching} and {Routing} ({HPSR})},
	publisher = {IEEE},
	author = {Gong, Long and Liu, Liang and Yang, Sen and Xu, Jun Jim and Xie, Yi and Wang, Xinbing},
	month = may,
	year = {2020},
	pages = {1--6},
	file = {Gong et al. - 2020 - SERENADE A Parallel Iterative Algorithm for Cross.pdf}
}

@inproceedings{gong_qps-r_2020,
	address = {Tsukuba Japan},
	title = {{QPS}-r: {A} {Cost}-{Effective} {Iterative} {Switching} {Algorithm} for {Input}-{Queued} {Switches}},
	isbn = {978-1-4503-7646-4},
	shorttitle = {{QPS}-r},
	url = {https://dl.acm.org/doi/10.1145/3388831.3388836},
	doi = {10.1145/3388831.3388836},
	abstract = {In an input-queued switch, a crossbar schedule, or a matching between the input ports and the output ports needs to be computed for each switching cycle, or time slot. It is a challenging research problem to design switching algorithms that produce high-quality matchings yet have a very low computational complexity when the switch has a large number of ports. Indeed, there appears to be a fundamental tradeoff between the computational complexity of the switching algorithm and the quality of the computed matchings.},
	language = {en},
	urldate = {2021-01-29},
	booktitle = {Proceedings of the 13th {EAI} {International} {Conference} on {Performance} {Evaluation} {Methodologies} and {Tools}},
	publisher = {ACM},
	author = {Gong, Long and Xu, Jun Jim and Liu, Liang and Maguluri, Siva Theja},
	month = may,
	year = {2020},
	pages = {19--26},
	file = {Gong et al. - 2020 - QPS-r A Cost-Effective Iterative Switching Algori.pdf}
}

@inproceedings{qu_joint_2020,
	address = {Toronto, ON, Canada},
	title = {Joint {Inference} on {Truth}/{Rumor} and {Their} {Sources} in {Social} {Networks}},
	isbn = {978-1-72816-412-0},
	url = {https://ieeexplore.ieee.org/document/9155478/},
	doi = {10.1109/INFOCOM41043.2020.9155478},
	abstract = {In the contemporary era of information explosion, we are often faced with the mixture of massive truth (true information) and rumor (false information) ﬂooded over social networks. Under such circumstances, it is very essential to infer whether each claim (e.g., news, messages) is a truth or a rumor, and identify their sources, i.e., the users who initially spread those claims. While most prior arts have been dedicated to the two tasks respectively, this paper aims to offer the joint inference on truth/rumor and their sources. Our insight is that a joint inference can enhance the mutual performance on both sides.},
	language = {en},
	urldate = {2021-01-29},
	booktitle = {{IEEE} {INFOCOM} 2020 - {IEEE} {Conference} on {Computer} {Communications}},
	publisher = {IEEE},
	author = {Qu, Shan and Zhao, Ziqi and Fu, Luoyi and Wang, Xinbing and Xu, Jun},
	month = jul,
	year = {2020},
	pages = {924--933},
	file = {Qu et al. - 2020 - Joint Inference on TruthRumor and Their Sources i.pdf}
}

@inproceedings{liu_less_2019,
	address = {Auckland New Zealand},
	title = {{LESS}: {A} {Matrix} {Split} and {Balance} {Algorithm} for {Parallel} {Circuit} ({Optical}) or {Hybrid} {Data} {Center} {Switching} and {More}},
	isbn = {978-1-4503-6894-0},
	shorttitle = {{LESS}},
	url = {https://dl.acm.org/doi/10.1145/3344341.3368807},
	doi = {10.1145/3344341.3368807},
	abstract = {The research problem of how to use a high-speed circuit switch, typically an optical switch, to most effectively boost the switching capacity of a datacenter network, has been extensively studied. In this work, we focus on a different but related research problem that arises when multiple (say s) parallel circuit switches are used: How to best split a switching workload D into sub-workloads D1, D2, ..., Ds , and give them to the s switches as their respective workloads, so that the overall makespan of the parallel switching system is minimized? Computing such an optimal split is unfortunately NP-hard, since the circuit/optical switch incurs a nontrivial reconfiguration delay when the switch configuration has to change. In this work, we formulate a weaker form of this problem: How to minimize the total number of nonzero entries in D1, D2, ..., Ds (so that the overall reconfiguration cost can be kept low), under the constraint that every row or column sum of D (which corresponds to the workload imposed on a sending or receiving rack respectively) is evenly split? Although this weaker problem is still NP-hard, we are able to design LESS, an approximation algorithm that has a low approximation ratio of only 1 + ϵ in practice and a low computational complexity of only O(m2), where m = ∥D ∥0 is the number of nonzero entries in D. Our simulation studies show that LESS results in excellent overall makespan performances under realistic datacenter traffic workloads and parameter settings.},
	language = {en},
	urldate = {2021-03-03},
	booktitle = {Proceedings of the 12th {IEEE}/{ACM} {International} {Conference} on {Utility} and {Cloud} {Computing}},
	publisher = {ACM},
	author = {Liu, Liang and Xu, Jun (Jim) and Singh, Mohit},
	month = dec,
	year = {2019},
	pages = {187--197},
	file = {Liu et al. - 2019 - LESS A Matrix Split and Balance Algorithm for Par.pdf}
}
